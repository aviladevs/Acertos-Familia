name: Website Uptime Monitor

on:
  schedule:
    - cron: "*/30 * * * *" # a cada 30 minutos
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  check-uptime:
    runs-on: ubuntu-latest
    steps:
      - name: Verificar URLs
        id: check
        shell: bash
        run: |
          set -e
          URLS=(
            "https://avilatransportes.com.br"
            "https://www.avilatransportes.com.br"
            "https://aviladevs.github.io/avilatransportes/"
          )
          failed=0
          msg=""
          for u in "${URLS[@]}"; do
            code=$(curl -s -o /dev/null -w "%{http_code}" -L "$u" || echo "000")
            echo "Status $u => $code"
            if [ "$code" -lt 200 ] || [ "$code" -ge 400 ]; then
              failed=1
              msg+=$'\n'"$u -> $code"
            fi
          done
          echo "failed=$failed" >> $GITHUB_OUTPUT
          printf "fail_msg<<EOF\n%s\nEOF\n" "$msg" >> $GITHUB_OUTPUT

      - name: Abrir issue se falhar
        if: steps.check.outputs.failed == '1'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const msg = `Uptime check falhou nas seguintes URLs:${{ toJSON(steps.check.outputs.fail_msg) }}`;
            const now = new Date().toISOString();
            const title = `Uptime falhou em ${now}`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body: msg,
              labels: ['uptime','bug']
            });

      - name: Notificar Slack (se configurado)
        if: steps.check.outputs.failed == '1'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          FAIL_MSG: ${{ steps.check.outputs.fail_msg }}
        run: |
          if [ -z "$SLACK_WEBHOOK_URL" ]; then echo "Slack não configurado"; exit 0; fi
          msg=$(printf 'Uptime falhou:\n%s' "$FAIL_MSG")
          curl -X POST -H 'Content-type: application/json' \
               --data "{\"text\": \"${msg//\"/\\\"}\"}" \
               "$SLACK_WEBHOOK_URL"

      # Telegram opcional: adicione um passo semelhante ao Slack com secrets TELEGRAM_BOT_TOKEN e TELEGRAM_CHAT_ID

      # E-mail opcional: pode ser adicionado futuramente via provedores específicos
